BODY{
    padding-top:100px;
}


ul.dropdown-content.select-dropdown li span {
    color: #1565c0; /* no need for !important :) */
}

/* label underline focus color */
.input-field input[type=text]:focus {
    border-bottom: 1px solid #1565c0;
    box-shadow: 0 1px 0 0 #1565c0;
}


button {
  transition: all 0.5s linear;
}

div {
    transition: all 0.5s linear;
}
.ng-hide{
    opacity: 0.1;
}

[ng\:cloak], [ng-cloak], .ng-cloak {
    display: none;
}



/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.simpleDemo ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

    /**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
    .simpleDemo ul[dnd-list] .dndDraggingSource {
        display: none;
    }

    /**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
    .simpleDemo ul[dnd-list] .dndPlaceholder {
        background-color: #ddd;
        display: block;
        min-height: 42px;
    }

    .simpleDemo ul[dnd-list] li {
        background-color: #fff;
        border: 1px solid #ddd;
        border-top-right-radius: 4px;
        border-top-left-radius: 4px;
        display: block;
        padding: 10px 15px;
        margin-bottom: -1px;
    }

        /**
 * Show selected elements in green
 */
        /*.simpleDemo ul[dnd-list] li.selected {
            background-color: #dff0d8;
            color: #3c763d;
        }*/